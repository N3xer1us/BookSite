//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Books.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseDTO", Namespace="http://schemas.datacontract.org/2004/07/AppService.DTOs")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Books.ServiceReference1.RoleDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Books.ServiceReference1.BookDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Books.ServiceReference1.AuthorDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Books.ServiceReference1.GenreDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Books.ServiceReference1.UserToBookDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Books.ServiceReference1.FriendDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Books.ServiceReference1.FriendRequestDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Books.ServiceReference1.UserDTO))]
    public partial class BaseDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoleDTO", Namespace="http://schemas.datacontract.org/2004/07/AppService.DTOs")]
    [System.SerializableAttribute()]
    public partial class RoleDTO : Books.ServiceReference1.BaseDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleDescription {
            get {
                return this.RoleDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleDescriptionField, value) != true)) {
                    this.RoleDescriptionField = value;
                    this.RaisePropertyChanged("RoleDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserCount {
            get {
                return this.UserCountField;
            }
            set {
                if ((this.UserCountField.Equals(value) != true)) {
                    this.UserCountField = value;
                    this.RaisePropertyChanged("UserCount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookDTO", Namespace="http://schemas.datacontract.org/2004/07/AppService.DTOs")]
    [System.SerializableAttribute()]
    public partial class BookDTO : Books.ServiceReference1.BaseDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateAddedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Books.ServiceReference1.AuthorDTO bookAuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Books.ServiceReference1.GenreDTO bookGenreField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateAdded {
            get {
                return this.DateAddedField;
            }
            set {
                if ((this.DateAddedField.Equals(value) != true)) {
                    this.DateAddedField = value;
                    this.RaisePropertyChanged("DateAdded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Books.ServiceReference1.AuthorDTO bookAuthor {
            get {
                return this.bookAuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.bookAuthorField, value) != true)) {
                    this.bookAuthorField = value;
                    this.RaisePropertyChanged("bookAuthor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Books.ServiceReference1.GenreDTO bookGenre {
            get {
                return this.bookGenreField;
            }
            set {
                if ((object.ReferenceEquals(this.bookGenreField, value) != true)) {
                    this.bookGenreField = value;
                    this.RaisePropertyChanged("bookGenre");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthorDTO", Namespace="http://schemas.datacontract.org/2004/07/AppService.DTOs")]
    [System.SerializableAttribute()]
    public partial class AuthorDTO : Books.ServiceReference1.BaseDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BookCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RatingField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveFrom {
            get {
                return this.ActiveFromField;
            }
            set {
                if ((this.ActiveFromField.Equals(value) != true)) {
                    this.ActiveFromField = value;
                    this.RaisePropertyChanged("ActiveFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveTo {
            get {
                return this.ActiveToField;
            }
            set {
                if ((this.ActiveToField.Equals(value) != true)) {
                    this.ActiveToField = value;
                    this.RaisePropertyChanged("ActiveTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BookCount {
            get {
                return this.BookCountField;
            }
            set {
                if ((this.BookCountField.Equals(value) != true)) {
                    this.BookCountField = value;
                    this.RaisePropertyChanged("BookCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenreDTO", Namespace="http://schemas.datacontract.org/2004/07/AppService.DTOs")]
    [System.SerializableAttribute()]
    public partial class GenreDTO : Books.ServiceReference1.BaseDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BookCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenreNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RatingField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BookCount {
            get {
                return this.BookCountField;
            }
            set {
                if ((this.BookCountField.Equals(value) != true)) {
                    this.BookCountField = value;
                    this.RaisePropertyChanged("BookCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GenreName {
            get {
                return this.GenreNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GenreNameField, value) != true)) {
                    this.GenreNameField = value;
                    this.RaisePropertyChanged("GenreName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastUpdated {
            get {
                return this.LastUpdatedField;
            }
            set {
                if ((this.LastUpdatedField.Equals(value) != true)) {
                    this.LastUpdatedField = value;
                    this.RaisePropertyChanged("LastUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserToBookDTO", Namespace="http://schemas.datacontract.org/2004/07/AppService.DTOs")]
    [System.SerializableAttribute()]
    public partial class UserToBookDTO : Books.ServiceReference1.BaseDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Books.ServiceReference1.BookDTO BookField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Books.ServiceReference1.UserDTO bookUserField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Books.ServiceReference1.BookDTO Book {
            get {
                return this.BookField;
            }
            set {
                if ((object.ReferenceEquals(this.BookField, value) != true)) {
                    this.BookField = value;
                    this.RaisePropertyChanged("Book");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Books.ServiceReference1.UserDTO bookUser {
            get {
                return this.bookUserField;
            }
            set {
                if ((object.ReferenceEquals(this.bookUserField, value) != true)) {
                    this.bookUserField = value;
                    this.RaisePropertyChanged("bookUser");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FriendDTO", Namespace="http://schemas.datacontract.org/2004/07/AppService.DTOs")]
    [System.SerializableAttribute()]
    public partial class FriendDTO : Books.ServiceReference1.BaseDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Books.ServiceReference1.UserDTO FriendField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Books.ServiceReference1.UserDTO UserField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Books.ServiceReference1.UserDTO Friend {
            get {
                return this.FriendField;
            }
            set {
                if ((object.ReferenceEquals(this.FriendField, value) != true)) {
                    this.FriendField = value;
                    this.RaisePropertyChanged("Friend");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Books.ServiceReference1.UserDTO User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FriendRequestDTO", Namespace="http://schemas.datacontract.org/2004/07/AppService.DTOs")]
    [System.SerializableAttribute()]
    public partial class FriendRequestDTO : Books.ServiceReference1.BaseDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Books.ServiceReference1.UserDTO ReceiverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Books.ServiceReference1.UserDTO SenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SentOnField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Books.ServiceReference1.UserDTO Receiver {
            get {
                return this.ReceiverField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverField, value) != true)) {
                    this.ReceiverField = value;
                    this.RaisePropertyChanged("Receiver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Books.ServiceReference1.UserDTO Sender {
            get {
                return this.SenderField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderField, value) != true)) {
                    this.SenderField = value;
                    this.RaisePropertyChanged("Sender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SentOn {
            get {
                return this.SentOnField;
            }
            set {
                if ((this.SentOnField.Equals(value) != true)) {
                    this.SentOnField = value;
                    this.RaisePropertyChanged("SentOn");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDTO", Namespace="http://schemas.datacontract.org/2004/07/AppService.DTOs")]
    [System.SerializableAttribute()]
    public partial class UserDTO : Books.ServiceReference1.BaseDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isOnlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Books.ServiceReference1.RoleDTO userRoleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DOB {
            get {
                return this.DOBField;
            }
            set {
                if ((this.DOBField.Equals(value) != true)) {
                    this.DOBField = value;
                    this.RaisePropertyChanged("DOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isOnline {
            get {
                return this.isOnlineField;
            }
            set {
                if ((this.isOnlineField.Equals(value) != true)) {
                    this.isOnlineField = value;
                    this.RaisePropertyChanged("isOnline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Books.ServiceReference1.RoleDTO userRole {
            get {
                return this.userRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.userRoleField, value) != true)) {
                    this.userRoleField = value;
                    this.RaisePropertyChanged("userRole");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckAccount", ReplyAction="http://tempuri.org/IService1/CheckAccountResponse")]
        Books.ServiceReference1.UserDTO CheckAccount(string Username, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckAccount", ReplyAction="http://tempuri.org/IService1/CheckAccountResponse")]
        System.Threading.Tasks.Task<Books.ServiceReference1.UserDTO> CheckAccountAsync(string Username, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUsers", ReplyAction="http://tempuri.org/IService1/GetUsersResponse")]
        Books.ServiceReference1.UserDTO[] GetUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUsers", ReplyAction="http://tempuri.org/IService1/GetUsersResponse")]
        System.Threading.Tasks.Task<Books.ServiceReference1.UserDTO[]> GetUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserById", ReplyAction="http://tempuri.org/IService1/GetUserByIdResponse")]
        Books.ServiceReference1.UserDTO GetUserById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserById", ReplyAction="http://tempuri.org/IService1/GetUserByIdResponse")]
        System.Threading.Tasks.Task<Books.ServiceReference1.UserDTO> GetUserByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostUser", ReplyAction="http://tempuri.org/IService1/PostUserResponse")]
        string PostUser(Books.ServiceReference1.UserDTO userDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostUser", ReplyAction="http://tempuri.org/IService1/PostUserResponse")]
        System.Threading.Tasks.Task<string> PostUserAsync(Books.ServiceReference1.UserDTO userDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PutUser", ReplyAction="http://tempuri.org/IService1/PutUserResponse")]
        string PutUser(Books.ServiceReference1.UserDTO userDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PutUser", ReplyAction="http://tempuri.org/IService1/PutUserResponse")]
        System.Threading.Tasks.Task<string> PutUserAsync(Books.ServiceReference1.UserDTO userDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUser", ReplyAction="http://tempuri.org/IService1/DeleteUserResponse")]
        string DeleteUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUser", ReplyAction="http://tempuri.org/IService1/DeleteUserResponse")]
        System.Threading.Tasks.Task<string> DeleteUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetUserStatus", ReplyAction="http://tempuri.org/IService1/SetUserStatusResponse")]
        string SetUserStatus(Books.ServiceReference1.UserDTO userDTO, bool status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetUserStatus", ReplyAction="http://tempuri.org/IService1/SetUserStatusResponse")]
        System.Threading.Tasks.Task<string> SetUserStatusAsync(Books.ServiceReference1.UserDTO userDTO, bool status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBooks", ReplyAction="http://tempuri.org/IService1/GetBooksResponse")]
        Books.ServiceReference1.BookDTO[] GetBooks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBooks", ReplyAction="http://tempuri.org/IService1/GetBooksResponse")]
        System.Threading.Tasks.Task<Books.ServiceReference1.BookDTO[]> GetBooksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBookById", ReplyAction="http://tempuri.org/IService1/GetBookByIdResponse")]
        Books.ServiceReference1.BookDTO GetBookById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBookById", ReplyAction="http://tempuri.org/IService1/GetBookByIdResponse")]
        System.Threading.Tasks.Task<Books.ServiceReference1.BookDTO> GetBookByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostBook", ReplyAction="http://tempuri.org/IService1/PostBookResponse")]
        string PostBook(Books.ServiceReference1.BookDTO bookDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostBook", ReplyAction="http://tempuri.org/IService1/PostBookResponse")]
        System.Threading.Tasks.Task<string> PostBookAsync(Books.ServiceReference1.BookDTO bookDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PutBook", ReplyAction="http://tempuri.org/IService1/PutBookResponse")]
        string PutBook(Books.ServiceReference1.BookDTO bookDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PutBook", ReplyAction="http://tempuri.org/IService1/PutBookResponse")]
        System.Threading.Tasks.Task<string> PutBookAsync(Books.ServiceReference1.BookDTO bookDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteBook", ReplyAction="http://tempuri.org/IService1/DeleteBookResponse")]
        string DeleteBook(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteBook", ReplyAction="http://tempuri.org/IService1/DeleteBookResponse")]
        System.Threading.Tasks.Task<string> DeleteBookAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAuthors", ReplyAction="http://tempuri.org/IService1/GetAuthorsResponse")]
        Books.ServiceReference1.AuthorDTO[] GetAuthors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAuthors", ReplyAction="http://tempuri.org/IService1/GetAuthorsResponse")]
        System.Threading.Tasks.Task<Books.ServiceReference1.AuthorDTO[]> GetAuthorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAuthorById", ReplyAction="http://tempuri.org/IService1/GetAuthorByIdResponse")]
        Books.ServiceReference1.AuthorDTO GetAuthorById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAuthorById", ReplyAction="http://tempuri.org/IService1/GetAuthorByIdResponse")]
        System.Threading.Tasks.Task<Books.ServiceReference1.AuthorDTO> GetAuthorByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostAuthor", ReplyAction="http://tempuri.org/IService1/PostAuthorResponse")]
        string PostAuthor(Books.ServiceReference1.AuthorDTO authorDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostAuthor", ReplyAction="http://tempuri.org/IService1/PostAuthorResponse")]
        System.Threading.Tasks.Task<string> PostAuthorAsync(Books.ServiceReference1.AuthorDTO authorDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PutAuthor", ReplyAction="http://tempuri.org/IService1/PutAuthorResponse")]
        string PutAuthor(Books.ServiceReference1.AuthorDTO authorDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PutAuthor", ReplyAction="http://tempuri.org/IService1/PutAuthorResponse")]
        System.Threading.Tasks.Task<string> PutAuthorAsync(Books.ServiceReference1.AuthorDTO authorDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteAuthor", ReplyAction="http://tempuri.org/IService1/DeleteAuthorResponse")]
        string DeleteAuthor(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteAuthor", ReplyAction="http://tempuri.org/IService1/DeleteAuthorResponse")]
        System.Threading.Tasks.Task<string> DeleteAuthorAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateAuthorBookInfo", ReplyAction="http://tempuri.org/IService1/UpdateAuthorBookInfoResponse")]
        string UpdateAuthorBookInfo(Books.ServiceReference1.AuthorDTO author);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateAuthorBookInfo", ReplyAction="http://tempuri.org/IService1/UpdateAuthorBookInfoResponse")]
        System.Threading.Tasks.Task<string> UpdateAuthorBookInfoAsync(Books.ServiceReference1.AuthorDTO author);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetGenres", ReplyAction="http://tempuri.org/IService1/GetGenresResponse")]
        Books.ServiceReference1.GenreDTO[] GetGenres();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetGenres", ReplyAction="http://tempuri.org/IService1/GetGenresResponse")]
        System.Threading.Tasks.Task<Books.ServiceReference1.GenreDTO[]> GetGenresAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetGenreById", ReplyAction="http://tempuri.org/IService1/GetGenreByIdResponse")]
        Books.ServiceReference1.GenreDTO GetGenreById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetGenreById", ReplyAction="http://tempuri.org/IService1/GetGenreByIdResponse")]
        System.Threading.Tasks.Task<Books.ServiceReference1.GenreDTO> GetGenreByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostGenre", ReplyAction="http://tempuri.org/IService1/PostGenreResponse")]
        string PostGenre(Books.ServiceReference1.GenreDTO genreDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostGenre", ReplyAction="http://tempuri.org/IService1/PostGenreResponse")]
        System.Threading.Tasks.Task<string> PostGenreAsync(Books.ServiceReference1.GenreDTO genreDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PutGenre", ReplyAction="http://tempuri.org/IService1/PutGenreResponse")]
        string PutGenre(Books.ServiceReference1.GenreDTO genreDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PutGenre", ReplyAction="http://tempuri.org/IService1/PutGenreResponse")]
        System.Threading.Tasks.Task<string> PutGenreAsync(Books.ServiceReference1.GenreDTO genreDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteGenre", ReplyAction="http://tempuri.org/IService1/DeleteGenreResponse")]
        string DeleteGenre(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteGenre", ReplyAction="http://tempuri.org/IService1/DeleteGenreResponse")]
        System.Threading.Tasks.Task<string> DeleteGenreAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateGenreBookInfo", ReplyAction="http://tempuri.org/IService1/UpdateGenreBookInfoResponse")]
        string UpdateGenreBookInfo(Books.ServiceReference1.GenreDTO genre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateGenreBookInfo", ReplyAction="http://tempuri.org/IService1/UpdateGenreBookInfoResponse")]
        System.Threading.Tasks.Task<string> UpdateGenreBookInfoAsync(Books.ServiceReference1.GenreDTO genre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRoles", ReplyAction="http://tempuri.org/IService1/GetRolesResponse")]
        Books.ServiceReference1.RoleDTO[] GetRoles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRoles", ReplyAction="http://tempuri.org/IService1/GetRolesResponse")]
        System.Threading.Tasks.Task<Books.ServiceReference1.RoleDTO[]> GetRolesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRoleById", ReplyAction="http://tempuri.org/IService1/GetRoleByIdResponse")]
        Books.ServiceReference1.RoleDTO GetRoleById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRoleById", ReplyAction="http://tempuri.org/IService1/GetRoleByIdResponse")]
        System.Threading.Tasks.Task<Books.ServiceReference1.RoleDTO> GetRoleByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostRole", ReplyAction="http://tempuri.org/IService1/PostRoleResponse")]
        string PostRole(Books.ServiceReference1.RoleDTO roleDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostRole", ReplyAction="http://tempuri.org/IService1/PostRoleResponse")]
        System.Threading.Tasks.Task<string> PostRoleAsync(Books.ServiceReference1.RoleDTO roleDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PutRole", ReplyAction="http://tempuri.org/IService1/PutRoleResponse")]
        string PutRole(Books.ServiceReference1.RoleDTO roleDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PutRole", ReplyAction="http://tempuri.org/IService1/PutRoleResponse")]
        System.Threading.Tasks.Task<string> PutRoleAsync(Books.ServiceReference1.RoleDTO roleDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteRole", ReplyAction="http://tempuri.org/IService1/DeleteRoleResponse")]
        string DeleteRole(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteRole", ReplyAction="http://tempuri.org/IService1/DeleteRoleResponse")]
        System.Threading.Tasks.Task<string> DeleteRoleAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateRoleUserInfo", ReplyAction="http://tempuri.org/IService1/UpdateRoleUserInfoResponse")]
        string UpdateRoleUserInfo(Books.ServiceReference1.RoleDTO role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateRoleUserInfo", ReplyAction="http://tempuri.org/IService1/UpdateRoleUserInfoResponse")]
        System.Threading.Tasks.Task<string> UpdateRoleUserInfoAsync(Books.ServiceReference1.RoleDTO role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBooksByUserId", ReplyAction="http://tempuri.org/IService1/GetBooksByUserIdResponse")]
        Books.ServiceReference1.UserToBookDTO[] GetBooksByUserId(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBooksByUserId", ReplyAction="http://tempuri.org/IService1/GetBooksByUserIdResponse")]
        System.Threading.Tasks.Task<Books.ServiceReference1.UserToBookDTO[]> GetBooksByUserIdAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUsersByBookId", ReplyAction="http://tempuri.org/IService1/GetUsersByBookIdResponse")]
        Books.ServiceReference1.UserToBookDTO[] GetUsersByBookId(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUsersByBookId", ReplyAction="http://tempuri.org/IService1/GetUsersByBookIdResponse")]
        System.Threading.Tasks.Task<Books.ServiceReference1.UserToBookDTO[]> GetUsersByBookIdAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddBookToUser", ReplyAction="http://tempuri.org/IService1/AddBookToUserResponse")]
        string AddBookToUser(Books.ServiceReference1.UserToBookDTO userToBookDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddBookToUser", ReplyAction="http://tempuri.org/IService1/AddBookToUserResponse")]
        System.Threading.Tasks.Task<string> AddBookToUserAsync(Books.ServiceReference1.UserToBookDTO userToBookDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveBookFromUser", ReplyAction="http://tempuri.org/IService1/RemoveBookFromUserResponse")]
        string RemoveBookFromUser(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveBookFromUser", ReplyAction="http://tempuri.org/IService1/RemoveBookFromUserResponse")]
        System.Threading.Tasks.Task<string> RemoveBookFromUserAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFriendsByUserId", ReplyAction="http://tempuri.org/IService1/GetFriendsByUserIdResponse")]
        Books.ServiceReference1.FriendDTO[] GetFriendsByUserId(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFriendsByUserId", ReplyAction="http://tempuri.org/IService1/GetFriendsByUserIdResponse")]
        System.Threading.Tasks.Task<Books.ServiceReference1.FriendDTO[]> GetFriendsByUserIdAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostFriend", ReplyAction="http://tempuri.org/IService1/PostFriendResponse")]
        string PostFriend(Books.ServiceReference1.FriendDTO friendDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostFriend", ReplyAction="http://tempuri.org/IService1/PostFriendResponse")]
        System.Threading.Tasks.Task<string> PostFriendAsync(Books.ServiceReference1.FriendDTO friendDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteFriend", ReplyAction="http://tempuri.org/IService1/DeleteFriendResponse")]
        string DeleteFriend(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteFriend", ReplyAction="http://tempuri.org/IService1/DeleteFriendResponse")]
        System.Threading.Tasks.Task<string> DeleteFriendAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFriendRequestByUserId", ReplyAction="http://tempuri.org/IService1/GetFriendRequestByUserIdResponse")]
        Books.ServiceReference1.FriendRequestDTO[] GetFriendRequestByUserId(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFriendRequestByUserId", ReplyAction="http://tempuri.org/IService1/GetFriendRequestByUserIdResponse")]
        System.Threading.Tasks.Task<Books.ServiceReference1.FriendRequestDTO[]> GetFriendRequestByUserIdAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostFriendRequest", ReplyAction="http://tempuri.org/IService1/PostFriendRequestResponse")]
        string PostFriendRequest(Books.ServiceReference1.FriendRequestDTO friendRequestDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostFriendRequest", ReplyAction="http://tempuri.org/IService1/PostFriendRequestResponse")]
        System.Threading.Tasks.Task<string> PostFriendRequestAsync(Books.ServiceReference1.FriendRequestDTO friendRequestDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteFriendRequest", ReplyAction="http://tempuri.org/IService1/DeleteFriendRequestResponse")]
        string DeleteFriendRequest(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteFriendRequest", ReplyAction="http://tempuri.org/IService1/DeleteFriendRequestResponse")]
        System.Threading.Tasks.Task<string> DeleteFriendRequestAsync(int Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Books.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Books.ServiceReference1.IService1>, Books.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Books.ServiceReference1.UserDTO CheckAccount(string Username, string Password) {
            return base.Channel.CheckAccount(Username, Password);
        }
        
        public System.Threading.Tasks.Task<Books.ServiceReference1.UserDTO> CheckAccountAsync(string Username, string Password) {
            return base.Channel.CheckAccountAsync(Username, Password);
        }
        
        public Books.ServiceReference1.UserDTO[] GetUsers() {
            return base.Channel.GetUsers();
        }
        
        public System.Threading.Tasks.Task<Books.ServiceReference1.UserDTO[]> GetUsersAsync() {
            return base.Channel.GetUsersAsync();
        }
        
        public Books.ServiceReference1.UserDTO GetUserById(int id) {
            return base.Channel.GetUserById(id);
        }
        
        public System.Threading.Tasks.Task<Books.ServiceReference1.UserDTO> GetUserByIdAsync(int id) {
            return base.Channel.GetUserByIdAsync(id);
        }
        
        public string PostUser(Books.ServiceReference1.UserDTO userDTO) {
            return base.Channel.PostUser(userDTO);
        }
        
        public System.Threading.Tasks.Task<string> PostUserAsync(Books.ServiceReference1.UserDTO userDTO) {
            return base.Channel.PostUserAsync(userDTO);
        }
        
        public string PutUser(Books.ServiceReference1.UserDTO userDTO) {
            return base.Channel.PutUser(userDTO);
        }
        
        public System.Threading.Tasks.Task<string> PutUserAsync(Books.ServiceReference1.UserDTO userDTO) {
            return base.Channel.PutUserAsync(userDTO);
        }
        
        public string DeleteUser(int id) {
            return base.Channel.DeleteUser(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteUserAsync(int id) {
            return base.Channel.DeleteUserAsync(id);
        }
        
        public string SetUserStatus(Books.ServiceReference1.UserDTO userDTO, bool status) {
            return base.Channel.SetUserStatus(userDTO, status);
        }
        
        public System.Threading.Tasks.Task<string> SetUserStatusAsync(Books.ServiceReference1.UserDTO userDTO, bool status) {
            return base.Channel.SetUserStatusAsync(userDTO, status);
        }
        
        public Books.ServiceReference1.BookDTO[] GetBooks() {
            return base.Channel.GetBooks();
        }
        
        public System.Threading.Tasks.Task<Books.ServiceReference1.BookDTO[]> GetBooksAsync() {
            return base.Channel.GetBooksAsync();
        }
        
        public Books.ServiceReference1.BookDTO GetBookById(int id) {
            return base.Channel.GetBookById(id);
        }
        
        public System.Threading.Tasks.Task<Books.ServiceReference1.BookDTO> GetBookByIdAsync(int id) {
            return base.Channel.GetBookByIdAsync(id);
        }
        
        public string PostBook(Books.ServiceReference1.BookDTO bookDTO) {
            return base.Channel.PostBook(bookDTO);
        }
        
        public System.Threading.Tasks.Task<string> PostBookAsync(Books.ServiceReference1.BookDTO bookDTO) {
            return base.Channel.PostBookAsync(bookDTO);
        }
        
        public string PutBook(Books.ServiceReference1.BookDTO bookDTO) {
            return base.Channel.PutBook(bookDTO);
        }
        
        public System.Threading.Tasks.Task<string> PutBookAsync(Books.ServiceReference1.BookDTO bookDTO) {
            return base.Channel.PutBookAsync(bookDTO);
        }
        
        public string DeleteBook(int id) {
            return base.Channel.DeleteBook(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteBookAsync(int id) {
            return base.Channel.DeleteBookAsync(id);
        }
        
        public Books.ServiceReference1.AuthorDTO[] GetAuthors() {
            return base.Channel.GetAuthors();
        }
        
        public System.Threading.Tasks.Task<Books.ServiceReference1.AuthorDTO[]> GetAuthorsAsync() {
            return base.Channel.GetAuthorsAsync();
        }
        
        public Books.ServiceReference1.AuthorDTO GetAuthorById(int id) {
            return base.Channel.GetAuthorById(id);
        }
        
        public System.Threading.Tasks.Task<Books.ServiceReference1.AuthorDTO> GetAuthorByIdAsync(int id) {
            return base.Channel.GetAuthorByIdAsync(id);
        }
        
        public string PostAuthor(Books.ServiceReference1.AuthorDTO authorDTO) {
            return base.Channel.PostAuthor(authorDTO);
        }
        
        public System.Threading.Tasks.Task<string> PostAuthorAsync(Books.ServiceReference1.AuthorDTO authorDTO) {
            return base.Channel.PostAuthorAsync(authorDTO);
        }
        
        public string PutAuthor(Books.ServiceReference1.AuthorDTO authorDTO) {
            return base.Channel.PutAuthor(authorDTO);
        }
        
        public System.Threading.Tasks.Task<string> PutAuthorAsync(Books.ServiceReference1.AuthorDTO authorDTO) {
            return base.Channel.PutAuthorAsync(authorDTO);
        }
        
        public string DeleteAuthor(int id) {
            return base.Channel.DeleteAuthor(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteAuthorAsync(int id) {
            return base.Channel.DeleteAuthorAsync(id);
        }
        
        public string UpdateAuthorBookInfo(Books.ServiceReference1.AuthorDTO author) {
            return base.Channel.UpdateAuthorBookInfo(author);
        }
        
        public System.Threading.Tasks.Task<string> UpdateAuthorBookInfoAsync(Books.ServiceReference1.AuthorDTO author) {
            return base.Channel.UpdateAuthorBookInfoAsync(author);
        }
        
        public Books.ServiceReference1.GenreDTO[] GetGenres() {
            return base.Channel.GetGenres();
        }
        
        public System.Threading.Tasks.Task<Books.ServiceReference1.GenreDTO[]> GetGenresAsync() {
            return base.Channel.GetGenresAsync();
        }
        
        public Books.ServiceReference1.GenreDTO GetGenreById(int id) {
            return base.Channel.GetGenreById(id);
        }
        
        public System.Threading.Tasks.Task<Books.ServiceReference1.GenreDTO> GetGenreByIdAsync(int id) {
            return base.Channel.GetGenreByIdAsync(id);
        }
        
        public string PostGenre(Books.ServiceReference1.GenreDTO genreDTO) {
            return base.Channel.PostGenre(genreDTO);
        }
        
        public System.Threading.Tasks.Task<string> PostGenreAsync(Books.ServiceReference1.GenreDTO genreDTO) {
            return base.Channel.PostGenreAsync(genreDTO);
        }
        
        public string PutGenre(Books.ServiceReference1.GenreDTO genreDTO) {
            return base.Channel.PutGenre(genreDTO);
        }
        
        public System.Threading.Tasks.Task<string> PutGenreAsync(Books.ServiceReference1.GenreDTO genreDTO) {
            return base.Channel.PutGenreAsync(genreDTO);
        }
        
        public string DeleteGenre(int id) {
            return base.Channel.DeleteGenre(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteGenreAsync(int id) {
            return base.Channel.DeleteGenreAsync(id);
        }
        
        public string UpdateGenreBookInfo(Books.ServiceReference1.GenreDTO genre) {
            return base.Channel.UpdateGenreBookInfo(genre);
        }
        
        public System.Threading.Tasks.Task<string> UpdateGenreBookInfoAsync(Books.ServiceReference1.GenreDTO genre) {
            return base.Channel.UpdateGenreBookInfoAsync(genre);
        }
        
        public Books.ServiceReference1.RoleDTO[] GetRoles() {
            return base.Channel.GetRoles();
        }
        
        public System.Threading.Tasks.Task<Books.ServiceReference1.RoleDTO[]> GetRolesAsync() {
            return base.Channel.GetRolesAsync();
        }
        
        public Books.ServiceReference1.RoleDTO GetRoleById(int id) {
            return base.Channel.GetRoleById(id);
        }
        
        public System.Threading.Tasks.Task<Books.ServiceReference1.RoleDTO> GetRoleByIdAsync(int id) {
            return base.Channel.GetRoleByIdAsync(id);
        }
        
        public string PostRole(Books.ServiceReference1.RoleDTO roleDTO) {
            return base.Channel.PostRole(roleDTO);
        }
        
        public System.Threading.Tasks.Task<string> PostRoleAsync(Books.ServiceReference1.RoleDTO roleDTO) {
            return base.Channel.PostRoleAsync(roleDTO);
        }
        
        public string PutRole(Books.ServiceReference1.RoleDTO roleDTO) {
            return base.Channel.PutRole(roleDTO);
        }
        
        public System.Threading.Tasks.Task<string> PutRoleAsync(Books.ServiceReference1.RoleDTO roleDTO) {
            return base.Channel.PutRoleAsync(roleDTO);
        }
        
        public string DeleteRole(int id) {
            return base.Channel.DeleteRole(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteRoleAsync(int id) {
            return base.Channel.DeleteRoleAsync(id);
        }
        
        public string UpdateRoleUserInfo(Books.ServiceReference1.RoleDTO role) {
            return base.Channel.UpdateRoleUserInfo(role);
        }
        
        public System.Threading.Tasks.Task<string> UpdateRoleUserInfoAsync(Books.ServiceReference1.RoleDTO role) {
            return base.Channel.UpdateRoleUserInfoAsync(role);
        }
        
        public Books.ServiceReference1.UserToBookDTO[] GetBooksByUserId(int Id) {
            return base.Channel.GetBooksByUserId(Id);
        }
        
        public System.Threading.Tasks.Task<Books.ServiceReference1.UserToBookDTO[]> GetBooksByUserIdAsync(int Id) {
            return base.Channel.GetBooksByUserIdAsync(Id);
        }
        
        public Books.ServiceReference1.UserToBookDTO[] GetUsersByBookId(int Id) {
            return base.Channel.GetUsersByBookId(Id);
        }
        
        public System.Threading.Tasks.Task<Books.ServiceReference1.UserToBookDTO[]> GetUsersByBookIdAsync(int Id) {
            return base.Channel.GetUsersByBookIdAsync(Id);
        }
        
        public string AddBookToUser(Books.ServiceReference1.UserToBookDTO userToBookDTO) {
            return base.Channel.AddBookToUser(userToBookDTO);
        }
        
        public System.Threading.Tasks.Task<string> AddBookToUserAsync(Books.ServiceReference1.UserToBookDTO userToBookDTO) {
            return base.Channel.AddBookToUserAsync(userToBookDTO);
        }
        
        public string RemoveBookFromUser(int Id) {
            return base.Channel.RemoveBookFromUser(Id);
        }
        
        public System.Threading.Tasks.Task<string> RemoveBookFromUserAsync(int Id) {
            return base.Channel.RemoveBookFromUserAsync(Id);
        }
        
        public Books.ServiceReference1.FriendDTO[] GetFriendsByUserId(int Id) {
            return base.Channel.GetFriendsByUserId(Id);
        }
        
        public System.Threading.Tasks.Task<Books.ServiceReference1.FriendDTO[]> GetFriendsByUserIdAsync(int Id) {
            return base.Channel.GetFriendsByUserIdAsync(Id);
        }
        
        public string PostFriend(Books.ServiceReference1.FriendDTO friendDTO) {
            return base.Channel.PostFriend(friendDTO);
        }
        
        public System.Threading.Tasks.Task<string> PostFriendAsync(Books.ServiceReference1.FriendDTO friendDTO) {
            return base.Channel.PostFriendAsync(friendDTO);
        }
        
        public string DeleteFriend(int Id) {
            return base.Channel.DeleteFriend(Id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteFriendAsync(int Id) {
            return base.Channel.DeleteFriendAsync(Id);
        }
        
        public Books.ServiceReference1.FriendRequestDTO[] GetFriendRequestByUserId(int Id) {
            return base.Channel.GetFriendRequestByUserId(Id);
        }
        
        public System.Threading.Tasks.Task<Books.ServiceReference1.FriendRequestDTO[]> GetFriendRequestByUserIdAsync(int Id) {
            return base.Channel.GetFriendRequestByUserIdAsync(Id);
        }
        
        public string PostFriendRequest(Books.ServiceReference1.FriendRequestDTO friendRequestDTO) {
            return base.Channel.PostFriendRequest(friendRequestDTO);
        }
        
        public System.Threading.Tasks.Task<string> PostFriendRequestAsync(Books.ServiceReference1.FriendRequestDTO friendRequestDTO) {
            return base.Channel.PostFriendRequestAsync(friendRequestDTO);
        }
        
        public string DeleteFriendRequest(int Id) {
            return base.Channel.DeleteFriendRequest(Id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteFriendRequestAsync(int Id) {
            return base.Channel.DeleteFriendRequestAsync(Id);
        }
    }
}
